name: dev-env
services:
  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
    env_file:
      - .env
    volumes:
      - ./services/api/demo-api:/usr/src/app
      - api_node_modules:/usr/src/app/node_modules
  webapp:
    build:
      context: ./services/webapp
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file:
      - .env
    volumes:
      - ./services/webapp/demo-webapp:/usr/src/app
      - webapp_node_modules:/usr/src/app/node_modules
    depends_on:
      - api
  db:
    image: postgres:16.9-alpine
    ports:
      - 5432:5432
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./services/db/init-scripts:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  webapp_node_modules: 
  api_node_modules:

  # This an external volume, it is created by the startup.sh script. This is to persist the data even if compose takes down the volumes it creates. 
  db_data:
    external: true
    name: dev-env_db_data

